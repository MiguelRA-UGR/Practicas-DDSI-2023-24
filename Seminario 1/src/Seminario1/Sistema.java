/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Seminario1;

import ConexionSQL.ConexionBD;
import static java.lang.Math.random;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.lang.Math;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author Usuario
 */
public class Sistema extends javax.swing.JFrame {
    
    private  ConexionBD conexion = new ConexionSQL.ConexionBD();
    private Connection con;
    
    /**
     * Creates new form Sistema
     */
    public Sistema() {
        initComponents();
        //menuAltaPedido.setVisible(false);
        initComponents();
        repaint();
        revalidate();
        con = conexion.conectar();
        cargarTablas();
    }

    private void borrarContenidoTablas() {
    try {
        // Borrar contenido de la tabla PEDIDO
        PreparedStatement deletePedidos = con.prepareStatement("DELETE FROM PEDIDO");
        deletePedidos.executeUpdate();

        // Borrar contenido de la tabla STOCK
        PreparedStatement deleteStock = con.prepareStatement("DELETE FROM STOCK");
        deleteStock.executeUpdate();

        // Borrar contenido de la tabla DETALLE_PEDIDO
        PreparedStatement deleteDetallePedido = con.prepareStatement("DELETE FROM DETALLE_PEDIDO");
        deleteDetallePedido.executeUpdate();

        // Limpiar los modelos de las tablas en la interfaz gráfica
        DefaultTableModel modeloTablaPedidos = (DefaultTableModel) tablaPedidos.getModel();
        modeloTablaPedidos.setRowCount(0);

        DefaultTableModel modeloTablaStock = (DefaultTableModel) tablaStock.getModel();
        modeloTablaStock.setRowCount(0);

        DefaultTableModel modeloTablaDetalle = (DefaultTableModel) tablaDetalle.getModel();
        modeloTablaDetalle.setRowCount(0);

        JOptionPane.showMessageDialog(null, "Contenido de las tablas borrado correctamente.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al borrar el contenido de las tablas: " + e.toString());
    }
}
    
    private void cargarTablas(){
        DefaultTableModel modeloTablaPedidos = (DefaultTableModel)tablaPedidos.getModel();
        DefaultTableModel modeloTablaStock = (DefaultTableModel)tablaStock.getModel();
        DefaultTableModel modeloTablaDetalle = (DefaultTableModel)tablaDetalle.getModel();
        
        modeloTablaPedidos.setRowCount(0);
        
        PreparedStatement cn;
        ResultSet rs;
        ResultSetMetaData rsmd;
        
        int columnas;
        
        try{
            cn = con.prepareStatement("SELECT CPEDIDO,CCLIENTE,FECHA_PEDIDO FROM PEDIDO");
            rs = cn.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            while(rs.next()){
                Object[] fila = new Object[columnas];
                for (int indice =0; indice < columnas; indice++){
                    fila[indice] = rs.getObject(indice + 1);
                }
                modeloTablaPedidos.addRow(fila);
            }
            
            cn = con.prepareStatement("SELECT CPRODUCTO,CANTIDAD FROM STOCK");
            rs = cn.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            while(rs.next()){
                Object[] fila = new Object[columnas];
                for (int indice =0; indice < columnas; indice++){
                    fila[indice] = rs.getObject(indice + 1);
                }
                modeloTablaStock.addRow(fila);
            }
            
            cn = con.prepareStatement("SELECT CPEDIDO,CPRODUCTO,CANTIDAD FROM DETALLE_PEDIDO");
            rs = cn.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            while(rs.next()){
                Object[] fila = new Object[columnas];
                for (int indice =0; indice < columnas; indice++){
                    fila[indice] = rs.getObject(indice + 1);
                }
                modeloTablaDetalle.addRow(fila);
            }
        }catch(SQLException e){
           JOptionPane.showMessageDialog(null, e.toString()); 
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedidos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaStock = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaDetalle = new javax.swing.JTable();
        botonAnadirStock = new javax.swing.JButton();
        botonAltaPedido = new javax.swing.JButton();
        botonCerrarSesión = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setText("SISTEMA DE PEDIDOS");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Pedidos");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setText("Stock");

        tablaPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código de pedido", "Cliente", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPedidos);

        tablaStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código de producto", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaStock);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setText("Detalles de los pedidos");

        tablaDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código de pedido", "Código de producto", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaDetalle);

        botonAnadirStock.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botonAnadirStock.setText("Añadir Stock");
        botonAnadirStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnadirStockActionPerformed(evt);
            }
        });

        botonAltaPedido.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botonAltaPedido.setText("Dar de Alta un nuevo pedido");

        botonCerrarSesión.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        botonCerrarSesión.setText("Cerrar Sesión");
        botonCerrarSesión.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarSesiónActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(235, 235, 235))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addComponent(botonAnadirStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonAltaPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(botonCerrarSesión, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(345, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonAnadirStock, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonAltaPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonCerrarSesión, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAnadirStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnadirStockActionPerformed
              
        try {
        // Obtener la conexión a la base de datos
        ConexionBD conexion = new ConexionBD();
        Connection con = conexion.conectar();
        
        String sql = "INSERT INTO STOCK (CPRODUCTO, CANTIDAD) VALUES (?, ?)";
        PreparedStatement pstmt = con.prepareStatement(sql);
        
        Random random = new Random();

        for (int i = 0; i < 10; i++) {
            int codigo = 1000000 + random.nextInt(9000000); // Genera códigos aleatorios de 7 cifras
            int cantidad = random.nextInt(91) + 10; // Genera cantidades aleatorias entre 10 y 100

            try {
                pstmt.setInt(1, codigo);
                pstmt.setInt(2, cantidad);
                pstmt.executeUpdate();
            } catch (SQLException e) {
                e.printStackTrace(); // Manejar la excepción según tus necesidades
            }
        }

        
        /*
        pstmt.setInt(1,4829150); 
        pstmt.setInt(2, 24); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1, 7693021); 
        pstmt.setInt(2, 35); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1, 1348765); 
        pstmt.setInt(2, 74); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1, 5982347); 
        pstmt.setInt(2, 12); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1, 7124098); 
        pstmt.setInt(2, 87); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1,3568201); 
        pstmt.setInt(2, 34); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1, 8901562); 
        pstmt.setInt(2, 79); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1, 2456379); 
        pstmt.setInt(2, 12); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1, 6134897); 
        pstmt.setInt(2, 5); 
        pstmt.executeUpdate();
        
        pstmt.setInt(1, 9275043); 
        pstmt.setInt(2, 14); 
        pstmt.executeUpdate();
        */
         con.close();
          cargarTablas();
        } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al añadir filas a la tabla STOCK: " + e.toString());
    }//GEN-LAST:event_botonAnadirStockActionPerformed
    }
    private void botonCerrarSesiónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarSesiónActionPerformed
        borrarContenidoTablas();
        conexion.desconectar();
        System.out.println("Conexión cerrada correctamente.");
        
       this.dispose();
    }//GEN-LAST:event_botonCerrarSesiónActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sistema().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAltaPedido;
    private javax.swing.JButton botonAnadirStock;
    private javax.swing.JButton botonCerrarSesión;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaDetalle;
    private javax.swing.JTable tablaPedidos;
    private javax.swing.JTable tablaStock;
    // End of variables declaration//GEN-END:variables
}
